name: Build and Deploy to Plesk via FTP

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install and build frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build

      - name: Prepare backend dist
        run: |
          rm -rf backend/dist || true
          mkdir -p backend/dist
          cp -r frontend/dist/* backend/dist/
          # include server rewrite rules if present
          if [ -f backend/.htaccess ]; then
            cp backend/.htaccess backend/dist/.htaccess
          fi

      - name: Deploy to Plesk via FTP
        uses: SamKirkland/FTP-Deploy-Action@4.4.0
        with:
          server: 168.75.84.128
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 21
          local-dir: backend/dist
          server-dir: /httpdocs/backend
          passive: true
name: build-and-deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Run deploy script
        run: bash deploy/deploy.sh

      - name: Configure SSH
        if: ${{ secrets.PLESK_SSH_KEY != '' }}
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.PLESK_SSH_KEY }}

      - name: Upload to Plesk
        if: ${{ secrets.PLESK_SSH_KEY != '' }}
        run: |
          rsync -avz --delete backend/ ${{ secrets.PLESK_SSH_USER }}@${{ secrets.PLESK_SSH_HOST }}:${{ secrets.PLESK_TARGET_DIR }}
